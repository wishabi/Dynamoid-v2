sudo: required

language: ruby
rvm:
  - ruby-2.0.0-p648
  - ruby-2.1.10
  - ruby-2.2.7
  - ruby-2.3.4
  - ruby-2.4.1
  - jruby-9.1.9.0
gemfile:
gemfile:
  - gemfiles/rails_4_0.gemfile
  - gemfiles/rails_4_1.gemfile
  - gemfiles/rails_4_2.gemfile
  - gemfiles/rails_5_0.gemfile
  - gemfiles/rails_5_1.gemfile
  - gemfiles/rails_5_2.gemfile
matrix:
  exclude:
    - rvm: ruby-2.0.0-p648
      gemfile: gemfiles/rails_5_0.gemfile
    - rvm: ruby-2.0.0-p648
      gemfile: gemfiles/rails_5_1.gemfile
    - rvm: ruby-2.0.0-p648
      gemfile: gemfiles/rails_5_2.gemfile
    - rvm: ruby-2.1.10
      gemfile: gemfiles/rails_5_0.gemfile
    - rvm: ruby-2.1.10
      gemfile: gemfiles/rails_5_1.gemfile
    - rvm: ruby-2.1.10
      gemfile: gemfiles/rails_5_2.gemfile
    - rvm: ruby-2.4.1
      gemfile: gemfiles/rails_4_0.gemfile
    - rvm: ruby-2.4.1
      gemfile: gemfiles/rails_4_1.gemfile

### BUILD LIFECYCLE STEPS ###

before_install:
  # Debugging: Print out the current docker-compose version.
  - docker-compose --version

  # If one of your containers does not build for
  # whatever reason it's best to report that now before your tests start
  # otherwise it can be really tricky to debug why tests are failing sometimes.
  - docker ps

after_install:
  - gem install bundler -v 1.15.4
  - bundle install

before_script:
  # Start Docker Compose as a daemon
  - docker-compose up -d

script:
  - bundle exec rake spec

after_script:
  - docker-compose down
